{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/app.jshint.js","dummy/tests/controllers/application.jshint.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/destroy-app.jshint.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/module-for-acceptance.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/integration/components/draw-control-test.js","dummy/tests/integration/components/draw-control-test.jshint.js","dummy/tests/resolver.jshint.js","dummy/tests/router.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('dummy/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _dummyTestsHelpersStartApp, _dummyTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _dummyTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _dummyTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('dummy/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _dummyResolver, _dummyConfigEnvironment) {\n\n  var resolver = _dummyResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('dummy/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, _ember, _dummyApp, _dummyConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _dummyConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _dummyApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('dummy/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/draw-control-test', ['exports', 'ember-qunit', 'ember-leaflet-draw/components/draw-control'], function (exports, _emberQunit, _emberLeafletDrawComponentsDrawControl) {\n  var drawControl = undefined;\n\n  (0, _emberQunit.moduleForComponent)('draw-control', 'Integration | Component | draw control', {\n    integration: true,\n    beforeEach: function beforeEach() {\n      this.register('component:draw-control', _emberLeafletDrawComponentsDrawControl['default'].extend({\n        init: function init() {\n          this._super.apply(this, arguments);\n          drawControl = this;\n        }\n      }));\n\n      // Set any properties with this.set('myProperty', 'value');\n      this.setProperties({\n        lat: 38,\n        lng: -78,\n        zoom: 8\n      });\n\n      // Handle any actions with this.on('myAction', function(val) { ... });\n    }\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(3);\n\n    this.render(Ember.HTMLBars.template({\n      'id': '2+IerzBl',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"unknown\",[\"draw-control\"]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control is not empty\n    assert.notEqual(this.$('.leaflet-draw.leaflet-control').text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '5XVbAoSa',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"block\",[\"draw-control\"],null,null,{\"statements\":[[\"text\",\"        \"],[\"open-element\",\"span\",[]],[\"static-attr\",\"class\",\"test-insertion\"],[\"flush-element\"],[\"text\",\"template block text\"],[\"close-element\"],[\"text\",\"\\\\n\"]],\"locals\":[]},null]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control is not empty\n    assert.notEqual(this.$('.leaflet-draw.leaflet-control').text().trim(), '');\n\n    // Ensure nested element is found\n    assert.equal(this.$('.test-insertion').text().trim(), 'template block text');\n  });\n\n  (0, _emberQunit.test)('it responds to boolean option for enableEditing', function (assert) {\n    assert.expect(4);\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'ytz2PaUM',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"enableEditing\"],[true]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control enables enableEditing\n    assert.ok(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-edit').length, \"setting enableEditing to true fails to render edit button\");\n    assert.ok(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-remove').length, \"setting enableEditing to true fails to render delete button\");\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'v9CxWJas',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"enableEditing\"],[false]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control disables enableEditing\n    assert.notOk(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-edit').length, \"setting enableEditing to false fails to hide edit button\");\n    assert.notOk(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-remove').length, \"setting enableEditing to false fails to hide delete button\");\n  });\n\n  (0, _emberQunit.test)('it has deafult value for enableEditing set to true', function (assert) {\n    assert.expect(1);\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '2+IerzBl',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"unknown\",[\"draw-control\"]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control defaults to enabling enableEditing\n    assert.equal(this.$('.leaflet-draw.leaflet-control').text().trim(), 'Draw a polylineDraw a polygonDraw a rectangleDraw a circleDraw a markerEdit layers.Delete layers.');\n  });\n\n  (0, _emberQunit.test)('it responds to boolean option for showDrawingLayer', function (assert) {\n    assert.expect(2);\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'GUyCTvTq',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"showDrawingLayer\"],[true]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control enables showDrawingLayer. If enabled, _layer will be created.\n    assert.ok(drawControl._layer, 'failed to find drawing layer');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'sZ3/iS62',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"showDrawingLayer\"],[false]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control disables showDrawingLayer. If disabled, _layer will not be created.\n    assert.notOk(drawControl._layer, 'failed to find drawing layer');\n  });\n\n  (0, _emberQunit.test)('it needs showDrawingLayer to be true for enableEditing to work', function (assert) {\n    assert.expect(4);\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'WKo7WaYM',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"showDrawingLayer\",\"enableEditing\"],[true,true]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control enables showDrawingLayer. If enabled (while edit is defaulted/true) the edit buttons will display becaue there is a layer to edit.\n    assert.ok(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-edit').length, \"setting enableEditing to true fails to render edit button\");\n    assert.ok(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-remove').length, \"setting enableEditing to true fails to render delete button\");\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'hNiWewGx',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"showDrawingLayer\",\"enableEditing\"],[false,true]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control disables showDrawingLayer. If disabled (while edit is defaulted/true) the edit buttons will not display becaue there is no layer to edit.\n    assert.notOk(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-edit').length, \"setting showDrawingLayer to false fails to hide edit button\");\n    assert.notOk(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-remove').length, \"setting showDrawingLayer to false fails to hide delete button\");\n  });\n\n  (0, _emberQunit.test)('it has deafult value for showDrawingLayer set to true', function (assert) {\n    assert.expect(2);\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '2+IerzBl',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"unknown\",[\"draw-control\"]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control enables showDrawingLayer. If enabled (while edit is defaulted/true) the edit buttons will display becaue there is a layer to edit.\n    assert.ok(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-edit').length, \"setting enableEditing to true fails to render edit button\");\n    assert.ok(this.$('.leaflet-draw.leaflet-control .leaflet-draw-edit-remove').length, \"setting enableEditing to true fails to render delete button\");\n  });\n\n  (0, _emberQunit.test)('it responds to all options for position', function (assert) {\n    assert.expect(4);\n\n    // Set new position to topleft\n    this.set('position', 'topleft');\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'ecw83nHD',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"position\"],[[\"get\",[\"position\"]]]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control is in topleft location\n    assert.ok(this.$('.leaflet-top.leaflet-left .leaflet-draw.leaflet-control').length, \"topleft location fails\");\n\n    // Set new position to topright\n    this.set('position', 'topright');\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'ecw83nHD',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"position\"],[[\"get\",[\"position\"]]]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control is in topright location\n    assert.ok(this.$('.leaflet-top.leaflet-right .leaflet-draw.leaflet-control').length, \"topright location fails\");\n\n    // Set new position to bottomleft\n    this.set('position', 'bottomleft');\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'ecw83nHD',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"position\"],[[\"get\",[\"position\"]]]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control is in bottomleft location\n    assert.ok(this.$('.leaflet-bottom.leaflet-left .leaflet-draw.leaflet-control').length, \"bottomleft location fails\");\n\n    // Set new position to bottomright\n    this.set('position', 'bottomright');\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'ecw83nHD',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"helper\",[\"draw-control\"],null,[[\"position\"],[[\"get\",[\"position\"]]]]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control is in bottomright location\n    assert.ok(this.$('.leaflet-bottom.leaflet-right .leaflet-draw.leaflet-control').length, \"bottomright location fails\");\n  });\n\n  (0, _emberQunit.test)('it has deafult value for position set to topleft', function (assert) {\n    assert.expect(1);\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '2+IerzBl',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"leaflet-map\"],null,[[\"lat\",\"lng\",\"zoom\"],[[\"get\",[\"lat\"]],[\"get\",[\"lng\"]],[\"get\",[\"zoom\"]]]],{\"statements\":[[\"text\",\"      \"],[\"append\",[\"unknown\",[\"draw-control\"]],false],[\"text\",\"\\\\n\"]],\"locals\":[]},null],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    // Ensure draw-control is in topleft location\n    assert.ok(this.$('.leaflet-top.leaflet-left .leaflet-draw.leaflet-control').length, \"defaulting to topleft location fails\");\n  });\n});","define('dummy/tests/integration/components/draw-control-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/draw-control-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/draw-control-test.js should pass jshint.');\n  });\n});","define('dummy/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('dummy/tests/test-helper', ['exports', 'dummy/tests/helpers/resolver', 'ember-qunit'], function (exports, _dummyTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_dummyTestsHelpersResolver['default']);\n});","define('dummy/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"tests.js"}